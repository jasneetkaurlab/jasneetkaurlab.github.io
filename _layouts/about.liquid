---
layout: default
---
<div style="display: flex; justify-content: center;">
  <span class="post" style="text-align: left; max-width: 800px; margin: auto;">
    <header class="post-header" style="padding: 10px 0;">
      <div style="display: flex; align-items: center;">
        {% if site.image %}
          <div style="margin-right: 10px;">
            <img src="{{ site.image }}" alt="Logo" style="max-width: 200px; height: auto;">
          </div>
        {% endif %}
        <div>
          <!-- Line between logo and text -->
          <hr style="margin: 10px 0; border: none; border-top: 2px solid #ccc;">

          {% if site.lab_name %}
            <h1 class="post-title" style="font-family: 'Lato', sans-serif; font-size: 5em; margin-bottom: 5px; margin-top: 0;">
              <span style="color: #58b376;">{{ site.lab_name | split: ' ' | first }}</span>
              {{ site.lab_name | remove_first: site.lab_name | split: ' ' | first | append: ' ' | append: site.lab_name | split: ' ' | slice: 1 }}
            </h1>
          {% endif %}

          {% if site.university %}
            <h2 class="post-subtitle" style="font-family: 'Lato', sans-serif; font-size: 3em; color: #666; margin-top: 0;">
              {{ site.university }}
            </h2>
          {% endif %}
        </div>
      </div>
    </header>
  </span>
</div>

<!-- Include Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap" rel="stylesheet">

<article>
  {% if page.profile %}
    <div class="profile" style="text-align: center; width: 100%; margin: auto;">
      {% if page.profile.images %}
        <div id="profileImageCarousel" class="carousel slide" data-ride="carousel" style="display: inline-block;">
          <div class="carousel-inner">
            {% for image in page.profile.images %}
              <div class="carousel-item {% if forloop.first %}active{% endif %}">
                <div class="profile-image-container" style="width: 100%; height: auto; text-align: center;">
                  <img
                    src="{{ image | prepend: 'assets/img/' }}"
                    class="profile-image"
                    alt="Profile Image"
                    style="object-fit: contain; width: 100%; height: auto; max-width: 400px; max-height: 400px;"
                  >
                </div>
              </div>
            {% endfor %}
          </div>
          <a class="carousel-control-prev" href="#profileImageCarousel" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
          </a>
          <a class="carousel-control-next" href="#profileImageCarousel" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
          </a>
        </div>
      {% endif %}
      {% if page.profile.more_info %}
        <div class="more-info">{{ page.profile.more_info }}</div>
      {% endif %}
    </div>
    <br>
  {% endif %}

  <div style="clear: both;"></div>
  {{ content }}

  {% if page.news and site.announcements.enabled %}
    <h2>
      <a href="{{ '/news/' | relative_url }}" style="color: inherit">news</a>
    </h2>
    {% include news.liquid limit=true %}
  {% endif %}

  {% if site.latest_posts.enabled %}
    <h2>
      <a href="{{ '/blog/' | relative_url }}" style="color: inherit">latest posts</a>
    </h2>
    {% include latest_posts.liquid %}
  {% endif %}

  {% if page.selected_papers %}
    <h2>
      <a href="{{ '/publications/' | relative_url }}" style="color: inherit">selected publications</a>
    </h2>
    {% include selected_papers.liquid %}
  {% endif %}

  {% if page.social %}
    <div class="social">
      <div class="contact-icons">{% include social.liquid %}</div>
      <div class="contact-note">{{ site.contact_note }}</div>
    </div>
  {% endif %}
</article>

<div class="kaur-lab-component">
  <style>
    .kaur-lab-component canvas {
      background: inherit;
      width: 100%;
      max-width: 800px;
      display: block;
      margin: 0 auto;
    }
    .kaur-lab-component input {
      visibility: hidden;
      pointer-events: none;
    }
    .kaur-lab-component p {
      position: fixed;
      left: 0;
      bottom: 5px;
      color: #fff;
      z-index: 10;
      font-size: 16px;
      font-family: Helvetica, Verdana, sans-serif;
      opacity: 0.5;
      width: 100%;
      text-align: center;
      margin: 0;
    }
    .profile-image-container {
      width: 400px;
      height: 400px;
      overflow: hidden;
      margin: 0 auto;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .profile-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 15px;
      box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }
  </style>
  <canvas id="kaurLabScene"></canvas>
  <input id="kaurLabCopy" type="text" value="Kaur Group">
  <p>Click anywhere to change the radius of your mouse</p>
  <script>
    var canvas = document.querySelector('.kaur-lab-component #kaurLabScene'),
      ctx = canvas.getContext('2d'),
      particles = [],
      amount = 0,
      mouse = { x: 0, y: 0 },
      radius = 1;

    var colors = ['#468966', '#FFF0A5', '#FFB03B', '#B64926', '#8E2800'];

    var copy = document.querySelector('.kaur-lab-component #kaurLabCopy');

    var ww = (canvas.width = canvas.offsetWidth);
    var wh = (canvas.height = canvas.offsetHeight);

    function Particle(x, y) {
      this.x = Math.random() * ww;
      this.y = Math.random() * wh;
      this.dest = {
        x: x,
        y: y,
      };
      this.r = Math.random() * 3 + 1;
      this.vx = (Math.random() - 0.5) * 20;
      this.vy = (Math.random() - 0.5) * 20;
      this.accX = 0;
      this.accY = 0;
      this.friction = Math.random() * 0.05 + 0.94;
      this.color = colors[Math.floor(Math.random() * 5)];
    }

    Particle.prototype.render = function () {
      this.accX = (this.dest.x - this.x) / 1000;
      this.accY = (this.dest.y - this.y) / 1000;
      this.vx += this.accX;
      this.vy += this.accY;
      this.vx *= this.friction;
      this.vy *= this.friction;

      this.x += this.vx;
      this.y += this.vy;

      ctx.fillStyle = this.color;
      ctx.beginPath();
      ctx.arc(this.x, this.y, this.r, Math.PI * 2, false);
      ctx.fill();

      var a = this.x - mouse.x;
      var b = this.y - mouse.y;

      var distance = Math.sqrt(a * a + b * b);
      if (distance < radius * 70) {
        this.accX = (this.x - mouse.x) / 100;
        this.accY = (this.y - mouse.y) / 100;
        this.vx += this.accX;
        this.vy += this.accY;
      }
    };

    function onMouseMove(e) {
      var rect = canvas.getBoundingClientRect();
      mouse.x = e.clientX - rect.left;
      mouse.y = e.clientY - rect.top;
    }

    function onTouchMove(e) {
      if (e.touches.length > 0) {
        mouse.x = e.touches[0].clientX;
        mouse.y = e.touches[0].clientY;
      }
    }

    function onTouchEnd(e) {
      mouse.x = -9999;
      mouse.y = -9999;
    }

    function initScene() {
      ww = canvas.width = canvas.offsetWidth;
      wh = canvas.height = canvas.offsetHeight;

      ctx.clearRect(0, 0, canvas.width, canvas.height);

      ctx.font = 'bold ' + ww / 10 + 'px sans-serif';
      ctx.textAlign = 'center';
      ctx.fillText(copy.value, ww / 2, wh / 2);

      var data = ctx.getImageData(0, 0, ww, wh).data;
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.globalCompositeOperation = 'screen';

      particles = [];
      for (var i = 0; i < ww; i += Math.round(ww / 150)) {
        for (var j = 0; j < wh; j += Math.round(ww / 150)) {
          if (data[(i + j * ww) * 4 + 3] > 150) {
            particles.push(new Particle(i, j));
          }
        }
      }
      amount = particles.length;
    }

    function onMouseClick() {
      radius++;
      if (radius === 5) {
        radius = 0;
      }
    }

    function render(a) {
      requestAnimationFrame(render);
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      for (var i = 0; i < amount; i++) {
        particles[i].render();
      }
    }

    copy.addEventListener('keyup', initScene);
    window.addEventListener('resize', initScene);
    window.addEventListener('mousemove', onMouseMove);
    window.addEventListener('touchmove', onTouchMove);
    window.addEventListener('click', onMouseClick);
    window.addEventListener('touchend', onTouchEnd);
    initScene();
    requestAnimationFrame(render);
  </script>
</div>
